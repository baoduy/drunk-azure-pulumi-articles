trigger:
  branches:
    include:
    - releases/*
    exclude:
    - main
  paths:
    include:
      - 01-az-shared
      - 02-az-vnet-hub
      - 03-az-aks-hub
      - 03-az-databases
      - 04-az-biz-apps
      - 04-az-vm-hub
      - 05-az-Apim

pool:
  vmImage: ubuntu-latest

variables:
- group: sg-pulumi
- name: npm_config_cache
  value: $(Pipeline.Workspace)/.npm
- name: azureSubscription
  value: 'az-sg'
- name: forceInstall
  value: 'false'
#There are 3 env: dev,sandbox,prd
- name: env_name
  value: $[replace(variables['Build.SourceBranchName'], 'refs/heads/releases', '')]

stages:
# stage 1: Deploy Share
- stage: 'deploy_share'
  displayName: '01. Shared Resources'
  jobs:
  - job: 
    displayName: Print Env Info
    steps:
      - task: Bash@3
        displayName: print env name
        inputs:
          targetType: 'inline'
          script: 'echo "Env name is: $(env_name)"'
      - task: Bash@3
        displayName: install latest pulumi
        inputs:
          targetType: 'inline'
          script: 'curl -fsSL https://get.pulumi.com | sh'
      
  - template: jobs-template.yml
    parameters:
      workDir: '01-az-shared'
      stack: $(env_name)
      forceInstall: $(forceInstall)
      azureSubscription: $(azureSubscription)
      npm_config_cache: $(npm_config_cache)
      buildPulumi: false

# stage 2: Deploy Hub VNET
- stage: 'deploy_hub'
  dependsOn: 'deploy_share'
  displayName: '02. Hub VNET Resources'
  condition: and(succeeded(), or(eq(variables['env_name'], 'sandbox'), eq(variables['env_name'], 'prd')))
  jobs:
  - template: jobs-template.yml
    parameters:
      workDir: '02-az-vnet-hub'
      stack: $(env_name)
      forceInstall: $(forceInstall)
      azureSubscription: $(azureSubscription)
      npm_config_cache: $(npm_config_cache)
      buildPulumi: true

# stage 3: Deploy AKS VNET
- stage: 'deploy_aks'
  dependsOn: 'deploy_hub'
  displayName: '03. AKS Resources'
  jobs:
  - template: jobs-template.yml
    parameters:
      workDir: '03-az-aks-hub'
      stack: $(env_name)
      forceInstall: $(forceInstall)
      azureSubscription: $(azureSubscription)
      npm_config_cache: $(npm_config_cache)
      buildPulumi: false

# stage 3: Deploy DB
- stage: "deploy_db"
  dependsOn: "deploy_hub"
  displayName: "03. Database Resources"
#  pool:
#    name: SG-Pool
  jobs:
  - template: jobs-template.yml
    parameters:
      workDir: "03-az-databases"
      stack: $(env_name)
      forceInstall: $(forceInstall)
      azureSubscription: $(azureSubscription)
      npm_config_cache: $(npm_config_cache)
      buildPulumi: true

 # stage 3: Deploy DB for dev
- stage: "deploy_db_dev"
  dependsOn: "deploy_share"
  displayName: "03. Database for Dev"
  condition: and(succeeded(), eq(variables['env_name'], 'dev'))
  #pool:
  #  name: SG-Pool
  jobs:
    - template: jobs-template.yml
      parameters:
        workDir: "03-az-databases"
        stack: $(env_name)
        forceInstall: $(forceInstall)
        azureSubscription: $(azureSubscription)
        npm_config_cache: $(npm_config_cache)
        buildPulumi: true
        
# stage 4: Deploy Biz Apps
- stage: "deploy_biz_apps"
  dependsOn: "deploy_share"
  displayName: "04. Biz Apps"
  jobs:
  - template: jobs-template.yml
    parameters:
      workDir: "04-az-biz-apps"
      stack: $(env_name)
      forceInstall: $(forceInstall)
      azureSubscription: $(azureSubscription)
      npm_config_cache: $(npm_config_cache)
      buildPulumi: true

# stage 4: Deploy VM CloudPC
- stage: 'deploy_vm'
  dependsOn: 'deploy_hub'
  displayName: '04. VM Resources'
  condition: and(succeeded(), contains(variables['env_name'], 'sandbox'))
  jobs:
  - template: jobs-template.yml
    parameters:
      workDir: '04-az-vm-hub'
      stack: $(env_name)
      forceInstall: $(forceInstall)
      azureSubscription: $(azureSubscription)
      npm_config_cache: $(npm_config_cache)
      buildPulumi: false

# stage 5: Deploy Apim
- stage: "deploy_apim"
  dependsOn: "deploy_biz_apps"
  displayName: "05. Apim"
  condition: and(succeeded(), or(eq(variables['env_name'], 'sandbox'), eq(variables['env_name'], 'prd')))
  jobs:
    - template: jobs-template.yml
      parameters:
        workDir: "05-az-Apim"
        stack: $(env_name)
        forceInstall: $(forceInstall)
        azureSubscription: $(azureSubscription)
        npm_config_cache: $(npm_config_cache)
        buildPulumi: true