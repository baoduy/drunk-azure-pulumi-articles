trigger: none
# uncomment this to enable auto trigger.
#  branches:
#    include:
#    - releases/*
#    exclude:
#    - main
pr: none

variables:
- group: cf-dns
- name: env_name
  value: $(build.sourceBranchName)
- name: azureSubscription
  value: 'az-pulumi'
- name: rsGroup
  value: 'dev-03-aks72e74d22'
- name: aksName
  value: 'dev-aks-clusterfe073605'
- name: acrName
  value: 'devaksacreb86a9ea'
- name: private-ip
  value: '192.168.31.250'
- name: valueFile
  value: 'values-dev.yaml'
- name: chart
  value: '$(Build.SourcesDirectory)/pipeline/ingress-helm'
- name: releaseName
  value: 'nginx-ingress'

pool:
  # As our AKS is a private cluster. We need to use the private agent pool.
  name: aks-agents

steps:
  # This step will replace all ${{}} tokens from YAML file by the pipeline variables (either from the variable group, key vault or inline variables above).
  # It will raise error to stop the pipeline if any variables are not found.
  - task: replacetokens@6
    displayName: 'Prepare Helm'
    inputs:
      sources: '$(chart)/$(valueFile)'
      tokenPattern: 'githubactions'
      caseInsensitivePaths: false
      includeDotPaths: false
      missingVarLog: 'error'
      ifNoFilesFound: 'error'

  # Deploy Helm to AKS using Service Principal
  - task: AzureCLI@2
    inputs:
      azureSubscription: '$(azureSubscription)'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az aks get-credentials --resource-group $(rsGroup) --name $(aksName) --overwrite-existing --public-fqdn
        kubelogin convert-kubeconfig -l azurecli

        helm upgrade --namespace nginx-ingress --install --values '$(chart)/$(valueFile)' --create-namespace --cleanup-on-fail --history-max 5 --insecure-skip-tls-verify  $(releaseName) $(chart)

  # - task: HelmDeploy@0
  #   displayName: 'Deploy Helm'
  #   inputs:
  #     connectionType: 'Azure Resource Manager'
  #     azureSubscription: '$(azureSubscription)'
  #     azureResourceGroup: '$(rsGroup)'
  #     kubernetesCluster: '$(aksName)'
  #     namespace: 'nginx-ingress'
  #     command: 'upgrade'
  #     chartType: 'FilePath'
  #     chartPath: './pipeline/ingress-helm'
  #     releaseName: 'nginx-ingress'
  #     valueFile: '$(valueFile)'
  #     waitForExecution: false
  #     arguments: '--create-namespace --cleanup-on-fail --history-max 5 --insecure-skip-tls-verify'