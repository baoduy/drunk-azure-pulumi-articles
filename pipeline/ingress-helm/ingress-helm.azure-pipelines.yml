trigger:
  branches:
    include:
      - releases/*
    exclude:
      - main
pr: none

variables:
- group: cf-dns
- name: env_name
  value: $(build.sourceBranchName)
- name: azureSubscription
  value: 'az-pulumi'
- name: rsGroup
  value: 'dev-03-aks72e74d22'
- name: aksName
  value: 'dev-aks-clusterfe073605'
- name: acrName
  value: 'devaksacreb86a9ea'
- name: private-ip
  value: '192.168.31.250'
- name: valueFile
  value: 'pipeline/ingress-helm/values-dev.yaml'

pool:
  # As our AKS is a private cluster. We need to use the private agent pool created before instead.
  name: cloud-agents

steps:
  # This step will replace all ${{}} tokens from YAML file by the pipeline variables (either from the variable group, key vault or inline variables above).
  # It will raise error to stop the pipeline if any variables are not found.
  - task: replacetokens@6
    displayName: 'Prepare Helm'
    inputs:
      sources: $(valueFile)
      tokenPattern: 'githubactions'
      caseInsensitivePaths: false
      includeDotPaths: false
      missingVarLog: 'error'
      ifNoFilesFound: 'error'

  # Deploy Helm to AKS
  - task: HelmDeploy@0
    displayName: 'Deploy Helm'
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscription: '$(azureSubscription)'
      azureResourceGroup: '$(rsGroup)'
      kubernetesCluster: '$(aksName)'
      namespace: 'nginx-ingress'
      command: 'upgrade'
      chartType: 'FilePath'
      chartPath: './pipeline/ingress-helm'
      releaseName: 'nginx-ingress'
      valueFile: '$(valueFile)'
      waitForExecution: false
      arguments: '--create-namespace --cleanup-on-fail --history-max 5 --insecure-skip-tls-verify'